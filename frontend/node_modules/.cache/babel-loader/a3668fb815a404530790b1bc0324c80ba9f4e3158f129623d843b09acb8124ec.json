{"ast":null,"code":"var _jsxFileName = \"C:\\\\project2025\\\\ShopBest\\\\frontend\\\\src\\\\components\\\\features\\\\AutoComplete.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport { AutoComplete } from 'antd';\nimport { setQuery } from '../../store/searchSlice';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AutoCompletion() {\n  _s();\n  const [options, setOptions] = useState([]);\n  const query = useSelector(state => state.search.query);\n  const dispatch = useDispatch();\n  const debounceTimer = useRef(null);\n  useEffect(() => {\n    if (!query) {\n      setOptions([]);\n      return;\n    }\n    if (debounceTimer.current) {\n      clearTimeout(debounceTimer.current);\n    }\n    debounceTimer.current = setTimeout(() => {\n      const controller = new AbortController();\n      async function fetchData() {\n        try {\n          const res = await fetch(`http://localhost:8000/api/suggestion?q=${encodeURIComponent(query)}`, {\n            signal: controller.signal\n          });\n          const data = await res.json();\n          const sliceData = data.slice(0, 8);\n          setOptions(sliceData);\n        } catch (err) {\n          if (err.name !== \"AbortError\") {\n            console.error(err);\n          }\n        }\n      }\n      fetchData();\n      return () => controller.abort();\n    }, 300);\n    return () => {\n      if (debounceTimer.current) {\n        clearTimeout(debounceTimer.current);\n      }\n    };\n  }, [query]);\n  const onChange = value => {\n    dispatch(setQuery(value));\n  };\n  const onSearch = value => {\n    dispatch(setQuery(value));\n  };\n  const onSelect = (_value, option) => {\n    dispatch(setQuery(option.label));\n  };\n  return /*#__PURE__*/_jsxDEV(AutoComplete, {\n    options: options,\n    style: {\n      width: 200\n    },\n    onChange: onChange,\n    onSelect: onSelect,\n    onSearch: onSearch,\n    value: query,\n    placeholder: \"Search products\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(AutoCompletion, \"Vqgg/oTwirP5VqPDcSN8T/SA+gE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = AutoCompletion;\nvar _c;\n$RefreshReg$(_c, \"AutoCompletion\");","map":{"version":3,"names":["useState","useEffect","useRef","AutoComplete","setQuery","useSelector","useDispatch","jsxDEV","_jsxDEV","AutoCompletion","_s","options","setOptions","query","state","search","dispatch","debounceTimer","current","clearTimeout","setTimeout","controller","AbortController","fetchData","res","fetch","encodeURIComponent","signal","data","json","sliceData","slice","err","name","console","error","abort","onChange","value","onSearch","onSelect","_value","option","label","style","width","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/project2025/ShopBest/frontend/src/components/features/AutoComplete.tsx"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport { AutoComplete } from 'antd';\r\nimport type { AutoCompleteProps } from 'antd';\r\nimport { setQuery } from '../../store/searchSlice';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport function AutoCompletion() {\r\n    const [options, setOptions] = useState<AutoCompleteProps['options']>([]);\r\n    const query = useSelector((state: any) => state.search.query);\r\n    const dispatch = useDispatch();\r\n    const debounceTimer = useRef<NodeJS.Timeout | null>(null);\r\n\r\n    useEffect(() => {\r\n        if (!query) {\r\n            setOptions([]);\r\n            return;\r\n        }\r\n\r\n        if (debounceTimer.current) {\r\n            clearTimeout(debounceTimer.current);\r\n        }\r\n\r\n        debounceTimer.current = setTimeout(() => {\r\n            const controller = new AbortController();\r\n\r\n            async function fetchData() {\r\n                try {\r\n                    const res = await fetch(`http://localhost:8000/api/suggestion?q=${encodeURIComponent(query)}`, {\r\n                        signal: controller.signal,\r\n                    });\r\n                    const data = await res.json();\r\n                    const sliceData = data.slice(0, 8);\r\n                    setOptions(sliceData);\r\n                } catch (err: any) {\r\n                    if (err.name !== \"AbortError\") {\r\n                        console.error(err);\r\n                    }\r\n                }\r\n            }\r\n\r\n            fetchData();\r\n\r\n            return () => controller.abort();\r\n        }, 300);\r\n\r\n        return () => {\r\n            if (debounceTimer.current) {\r\n                clearTimeout(debounceTimer.current);\r\n            }\r\n        };\r\n    }, [query]);\r\n\r\n    const onChange = (value: string) => {\r\n        dispatch(setQuery(value));\r\n    };\r\n    const onSearch = (value: string) => {\r\n        dispatch(setQuery(value));\r\n    };\r\n    const onSelect = (_value: string, option: any) => {\r\n        dispatch(setQuery(option.label));\r\n    };\r\n\r\n    return (\r\n        <AutoComplete\r\n            options={options}\r\n            style={{ width: 200 }}\r\n            onChange={onChange}\r\n            onSelect={onSelect}\r\n            onSearch={onSearch}\r\n            value={query}\r\n            placeholder=\"Search products\"\r\n        />\r\n    );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,SAASC,YAAY,QAAQ,MAAM;AAEnC,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,OAAO,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAA+B,EAAE,CAAC;EACxE,MAAMa,KAAK,GAAGR,WAAW,CAAES,KAAU,IAAKA,KAAK,CAACC,MAAM,CAACF,KAAK,CAAC;EAC7D,MAAMG,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,aAAa,GAAGf,MAAM,CAAwB,IAAI,CAAC;EAEzDD,SAAS,CAAC,MAAM;IACZ,IAAI,CAACY,KAAK,EAAE;MACRD,UAAU,CAAC,EAAE,CAAC;MACd;IACJ;IAEA,IAAIK,aAAa,CAACC,OAAO,EAAE;MACvBC,YAAY,CAACF,aAAa,CAACC,OAAO,CAAC;IACvC;IAEAD,aAAa,CAACC,OAAO,GAAGE,UAAU,CAAC,MAAM;MACrC,MAAMC,UAAU,GAAG,IAAIC,eAAe,CAAC,CAAC;MAExC,eAAeC,SAASA,CAAA,EAAG;QACvB,IAAI;UACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,0CAA0CC,kBAAkB,CAACb,KAAK,CAAC,EAAE,EAAE;YAC3Fc,MAAM,EAAEN,UAAU,CAACM;UACvB,CAAC,CAAC;UACF,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;UAC7B,MAAMC,SAAS,GAAGF,IAAI,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;UAClCnB,UAAU,CAACkB,SAAS,CAAC;QACzB,CAAC,CAAC,OAAOE,GAAQ,EAAE;UACf,IAAIA,GAAG,CAACC,IAAI,KAAK,YAAY,EAAE;YAC3BC,OAAO,CAACC,KAAK,CAACH,GAAG,CAAC;UACtB;QACJ;MACJ;MAEAT,SAAS,CAAC,CAAC;MAEX,OAAO,MAAMF,UAAU,CAACe,KAAK,CAAC,CAAC;IACnC,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAM;MACT,IAAInB,aAAa,CAACC,OAAO,EAAE;QACvBC,YAAY,CAACF,aAAa,CAACC,OAAO,CAAC;MACvC;IACJ,CAAC;EACL,CAAC,EAAE,CAACL,KAAK,CAAC,CAAC;EAEX,MAAMwB,QAAQ,GAAIC,KAAa,IAAK;IAChCtB,QAAQ,CAACZ,QAAQ,CAACkC,KAAK,CAAC,CAAC;EAC7B,CAAC;EACD,MAAMC,QAAQ,GAAID,KAAa,IAAK;IAChCtB,QAAQ,CAACZ,QAAQ,CAACkC,KAAK,CAAC,CAAC;EAC7B,CAAC;EACD,MAAME,QAAQ,GAAGA,CAACC,MAAc,EAAEC,MAAW,KAAK;IAC9C1B,QAAQ,CAACZ,QAAQ,CAACsC,MAAM,CAACC,KAAK,CAAC,CAAC;EACpC,CAAC;EAED,oBACInC,OAAA,CAACL,YAAY;IACTQ,OAAO,EAAEA,OAAQ;IACjBiC,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAI,CAAE;IACtBR,QAAQ,EAAEA,QAAS;IACnBG,QAAQ,EAAEA,QAAS;IACnBD,QAAQ,EAAEA,QAAS;IACnBD,KAAK,EAAEzB,KAAM;IACbiC,WAAW,EAAC;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEV;AAACxC,EAAA,CAnEeD,cAAc;EAAA,QAEZJ,WAAW,EACRC,WAAW;AAAA;AAAA6C,EAAA,GAHhB1C,cAAc;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}